;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 11/28/2022 15:57:19
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF23  	GOTO        70
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
___FillZeros:
;__Lib_System.c,19 :: 		
;__Lib_System.c,20 :: 		
L___FillZeros1:
0x001C	0x50EA      	MOVF        FSR0+1, 0 
0x001E	0x5CE2      	SUBWF       FSR1+1, 0 
0x0020	0xE102      	BNZ         L____FillZeros12
0x0022	0x50E9      	MOVF        FSR0, 0 
0x0024	0x5CE1      	SUBWF       FSR1, 0 
L____FillZeros12:
0x0026	0xE202      	BC          L___FillZeros2
;__Lib_System.c,21 :: 		
0x0028	0x6AE6      	CLRF        POSTINC1 
0x002A	0xD7F8      	BRA         L___FillZeros1
L___FillZeros2:
;__Lib_System.c,22 :: 		
L_end___FillZeros:
0x002C	0x0012      	RETURN      0
; end of ___FillZeros
_ft_sum:
;main.c,10 :: 		signed char ft_sum(void)
;main.c,12 :: 		return (a + b);
0x002E	0x5017      	MOVF        _b, 0 
0x0030	0x2415      	ADDWF       _a, 0 
0x0032	0x6E00      	MOVWF       R0 
;main.c,13 :: 		}
L_end_ft_sum:
0x0034	0x0012      	RETURN      0
; end of _ft_sum
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,26 :: 		
_CC2DL_Loop1:
;__Lib_System.c,27 :: 		
0x0036	0x0009      	TBLRD*+
;__Lib_System.c,28 :: 		
0x0038	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,29 :: 		
0x003C	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,30 :: 		
0x003E	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
0x0040	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,32 :: 		
0x0042	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,34 :: 		
L_end___CC2DW:
0x0044	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x0046	0xF000EC3C  	CALL        120, 0
0x004A	0x0E03      	MOVLW       3
0x004C	0x6E15      	MOVWF       _a 
0x004E	0x6A16      	CLRF        _c 
0x0050	0x0E02      	MOVLW       2
0x0052	0x6E17      	MOVWF       _b 
;main.c,15 :: 		void main(void)
;main.c,19 :: 		while (1) {
L_main0:
;main.c,20 :: 		if (ft_sum() == 5)  // a + b
0x0054	0xDFEC      	RCALL       _ft_sum
0x0056	0x5000      	MOVF        R0, 0 
0x0058	0x0A05      	XORLW       5
0x005A	0xE102      	BNZ         L_main2
;main.c,21 :: 		c++;    // ++ is known as post-increment
0x005C	0x2A16      	INCF        _c, 1 
0x005E	0xD001      	BRA         L_main3
L_main2:
;main.c,23 :: 		c--;    // -- is known as post-decrement
0x0060	0x0616      	DECF        _c, 1 
L_main3:
;main.c,25 :: 		switch (a)
0x0062	0xD004      	BRA         L_main4
;main.c,27 :: 		case (3):
L_main6:
;main.c,28 :: 		a--;
0x0064	0x0615      	DECF        _a, 1 
;main.c,29 :: 		break;  // PAY ATTENTION TO THIS!
0x0066	0xD006      	BRA         L_main5
;main.c,31 :: 		default:
L_main7:
;main.c,32 :: 		a++;
0x0068	0x2A15      	INCF        _a, 1 
;main.c,33 :: 		break;
0x006A	0xD004      	BRA         L_main5
;main.c,34 :: 		}
L_main4:
0x006C	0x5015      	MOVF        _a, 0 
0x006E	0x0A03      	XORLW       3
0x0070	0xE0F9      	BZ          L_main6
0x0072	0xD7FA      	BRA         L_main7
L_main5:
;main.c,35 :: 		}
0x0074	0xD7EF      	BRA         L_main0
;main.c,36 :: 		}
L_end_main:
0x0076	0xD7FF      	BRA         $+0
; end of _main
0x0078	0xF015EE10  	LFSR        1, 21
0x007C	0xF018EE00  	LFSR        0, 24
0x0080	0xF000EC0E  	CALL        28, 0
0x0084	0x0012      	RETURN      0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [18]    ___FillZeros
0x002E       [8]    _ft_sum
0x0036      [16]    ___CC2DW
0x0046      [50]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _a
0x0016       [1]    _c
0x0017       [1]    _b
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE1       [2]    FSR1
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FE9       [2]    FSR0
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
